name: Deploy my Lambda Function

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Linting Libraries
        run: |
          cd function
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out Code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
          cd function
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi
      - name: Create zip bundle
        run: |
          cd function
          zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip

  upload:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Upload to S3
        run: aws s3 cp ${{ github.sha }}.zip s3://my-bucket-dmaslkdajjj/${{ github.sha }}.zip

  test:
    runs-on: ubuntu-latest
    needs: upload
    strategy:
      matrix:
        input: [ "Hello", "Hi" ]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Create Test Function
        run: |
          aws lambda create-function --function-name test-function-${{ matrix.input }} \
            --code S3Bucket=my-bucket-dmaslkdajjj,S3Key=${{ github.sha }}.zip \
            --handler lambda_function.lambda_handler --runtime python3.8 \
            --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/my-lambda-role
      - name: Invoke Test Function
        run: |
          aws lambda invoke --function-name test-function-${{ matrix.input }} \ 
            --payload $(echo "{\"input\": \"${{ matrix.input }}\"}" | base64) \ 
            --output json out
          if grep -q "Error" out; then
            exit1
          fi

      - name: Wait 30 Seconds
        run: sleep 30
      - name: Destroy Test Function
        if: ${{ always() }}
        run: aws lambda delete-function --function-name test-function-${{ matrix.input }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update function code
        run: |
          aws lambda update-function-code \
            --function-name my-function \
            --s3-bucket my-bucket-dmaslkdajjj \
            --s3-key ${{ github.sha }}.zip \
            --publish
